package com.hopen.darts.utils.SerialPort;

/**
 * 仪器按键定义
 */

public class KeyCode {

    /**
     * 01-10 22:33:25.070 4667-4667/com.bj.serialportdemo E/###:
     * 从左到右依次为：按下   弹起
     * 左  ：FE 01 04 04 09 00 F0 FD    FE 01 04 04 0A 00 EF FD
     * 上  ：FE 01 04 04 05 00 F4 FD    FE 01 04 04 06 00 F3 FD
     * 右  ：FE 01 04 04 0B 00 EE FD    FE 01 04 04 0C 00 ED FD
     * 下  ：FE 01 04 04 07 00 F2 FD    FE 01 04 04 08 00 F1 FD
     * 小  ：FE 01 04 04 03 00 F6 FD    FE 01 04 04 04 00 F5 FD
     * 大  ：FE 01 04 04 01 00 F8 FD    FE 01 04 04 02 00 F7 FD
     * 设置：FE 01 04 04 0D 00 EC FD    FE 01 04 04 0E 00 EB FD
     */
    public static final long KEY_LEFT_DOWN = 0xFE0104040900F0FDL;
    public static final long KEY_LEFT_UP = 0xFE0104040A00EFFDL;

    public static final long KEY_TOP_DOWN = 0xFE0104040500F4FDL;
    public static final long KEY_TOP_UP = 0xFE0104040600F3FDL;

    public static final long KEY_RIGHT_DOWN = 0xFE0104040B00EEFDL;
    public static final long KEY_RIGHT_UP = 0xFE0104040C00EDFDL;

    public static final long KEY_BOTTOM_DOWN = 0xFE0104040700F2FDL;
    public static final long KEY_BOTTOM_UP = 0xFE0104040800F1FDL;

    public static final long KEY_CANCEL_DOWN = 0xFE0104040300F6FDL;
    public static final long KEY_CANCEL_UP = 0xFE0104040400F5FDL;

    public static final long KEY_CONFIRM_DOWN = 0xFE0104040100F8FDL;
    public static final long KEY_CONFIRM_UP = 0xFE0104040200F7FDL;

    public static final long KEY_SETTING_DOWN = 0xFE0104040D00ECFDL;
    public static final long KEY_SETTING_UP = 0xFE0104040E00EBFDL;

    /**
     * 靶盘分区码表
     * scoreAreaCollectDataTableOld[i][j]
     * 其中i代表第几分区：0-20对应0-20分区，21对应牛眼
     * j代表第几倍区：0和2代表内围和外围，1代表三倍区，3代表二倍区
     */
    private static final long[][] scoreAreaCollectDataTableOld = {
            //均以FE0104开头，均以FD结尾
            //从左到右依次为：内围，三倍，外围，二倍(对应靶盘从内到外)
            {0xFE0104030100F9FDL, 0, 0, 0},//零分区
            {0xFE0104024F00ACFDL, 0xFE0104025000ABFDL, 0xFE0104025100AAFDL, 0xFE0104025200A9FDL},//1分区
            {0xFE0104021700E4FDL, 0xFE0104021800E3FDL, 0xFE0104021900E2FDL, 0xFE0104021A00E1FDL},//2分区
            {0xFE0104022700D4FDL, 0xFE0104022800D3FDL, 0xFE0104022900D2FDL, 0xFE0104022A00D1FDL},//3分区
            {0xFE0104023F00BCFDL, 0xFE0104024000BBFDL, 0xFE0104024100BAFDL, 0xFE0104024200B9FDL},//4分区
            {0xFE0104024300B8FDL, 0xFE0104024400B7FDL, 0xFE0104024500B6FDL, 0xFE0104024600B5FDL},//5分区
            {0xFE0104022F00CCFDL, 0xFE0104023000CBFDL, 0xFE0104023100CAFDL, 0xFE0104023200C9FDL},//6分区
            {0xFE0104021B00E0FDL, 0xFE0104021C00DFFDL, 0xFE0104021D00DEFDL, 0xFE0104021E00DDFDL},//7分区
            {0xFE0104020B00F0FDL, 0xFE0104020C00EFFDL, 0xFE0104020D00EEFDL, 0xFE0104020E00EDFDL},//8分区
            {0xFE0104023300C8FDL, 0xFE0104023400C7FDL, 0xFE0104023500C6FDL, 0xFE0104023600C5FDL},//9分区
            {0xFE0104020700F4FDL, 0xFE0104020800F3FDL, 0xFE0104020900F2FDL, 0xFE0104020A00F1FDL},//10分区
            {0xFE0104020300F8FDL, 0xFE0104020400F7FDL, 0xFE0104020500F6FDL, 0xFE0104020600F5FDL},//11分区
            {0xFE0104023B00C0FDL, 0xFE0104023C00BFFDL, 0xFE0104023D00BEFDL, 0xFE0104023E00BDFDL},//12分区
            {0xFE0104023700C4FDL, 0xFE0104023800C3FDL, 0xFE0104023900C2FDL, 0xFE0104023A00C1FDL},//13分区
            {0xFE0104022B00D0FDL, 0xFE0104022C00CFFDL, 0xFE0104022D00CEFDL, 0xFE0104022E00CDFDL},//14分区
            {0xFE0104020F00ECFDL, 0xFE0104021000EBFDL, 0xFE0104021100EAFDL, 0xFE0104021200E9FDL},//15分区
            {0xFE0104021300E8FDL, 0xFE0104021400E7FDL, 0xFE0104021500E6FDL, 0xFE0104021600E5FDL},//16分区
            {0xFE0104021F00DCFDL, 0xFE0104022000DBFDL, 0xFE0104022100DAFDL, 0xFE0104022200D9FDL},//17分区
            {0xFE0104024700B4FDL, 0xFE0104024800B3FDL, 0xFE0104024900B2FDL, 0xFE0104024A00B1FDL},//18分区
            {0xFE0104022300D8FDL, 0xFE0104022400D7FDL, 0xFE0104022500D6FDL, 0xFE0104022600D5FDL},//19分区
            {0xFE0104024B00B0FDL, 0xFE0104024C00AFFDL, 0xFE0104024D00AEFDL, 0xFE0104024E00ADFDL},//20分区
            {0xFE0104020100FAFDL, 0, 0xFE0104020200F9FDL, 0}//牛眼(中心)
    };

    /**
     * 靶盘分区码表
     * scoreAreaCollectDataTableNew[i][j]
     * 其中i代表第几分区：0-20对应0-20分区，21对应牛眼
     * j代表第几倍区：0和2代表内围和外围，1代表三倍区，3代表二倍区
     */
    @Deprecated
    private static final long[][] scoreAreaCollectDataTableNew = {
            //均以FE0104开头，均以FD结尾
            //从左到右依次为：内围，三倍，外围，二倍(对应靶盘从内到外)
            {0xFE0104030100F9FDL, 0, 0, 0},//零分区
            {0xFE0104024A00F4FDL, 0xFE0104024B00B0FDL, 0xFE0104024C00AFFDL, 0xFE0104024D00AEFDL},//1分区
            {0xFE0104021700E4FDL, 0xFE0104021800E3FDL, 0xFE0104021900E2FDL, 0xFE0104021A00E1FDL},//2分区
            {0xFE0104022700D4FDL, 0xFE0104022800D3FDL, 0xFE0104022900D2FDL, 0xFE0104022A00D1FDL},//3分区
            {0xFE0104023F00BCFDL, 0xFE0104024000BBFDL, 0xFE0104024100BAFDL, 0xFE0104024200B9FDL},//4分区
            {0xFE0104024300B8FDL, 0xFE0104024400B7FDL, 0xFE0104024500B6FDL, 0xFE0104024600B5FDL},//5分区
            {0xFE0104022F00CCFDL, 0xFE0104023000CBFDL, 0xFE0104023100CAFDL, 0xFE0104023200C9FDL},//6分区
            {0xFE0104021B00E0FDL, 0xFE0104021C00DFFDL, 0xFE0104021D00DEFDL, 0xFE0104021E00DDFDL},//7分区
            {0xFE0104020B00F0FDL, 0xFE0104020C00EFFDL, 0xFE0104020D00EEFDL, 0xFE0104020E00EDFDL},//8分区
            {0xFE0104023300C8FDL, 0xFE0104023400C7FDL, 0xFE0104023500C6FDL, 0xFE0104023600C5FDL},//9分区
            {0xFE0104020700F4FDL, 0xFE0104020800F3FDL, 0xFE0104020900F2FDL, 0xFE0104020A00F1FDL},//10分区
            {0xFE0104020300F8FDL, 0xFE0104020400F7FDL, 0xFE0104020500F6FDL, 0xFE0104020600F5FDL},//11分区
            {0xFE0104023B00C0FDL, 0xFE0104023C00BFFDL, 0xFE0104023D00BEFDL, 0xFE0104023E00BDFDL},//12分区
            {0xFE0104023700C4FDL, 0xFE0104023800C3FDL, 0xFE0104023900C2FDL, 0xFE0104023A00C1FDL},//13分区
            {0xFE0104022B00D0FDL, 0xFE0104022C00CFFDL, 0xFE0104022D00CEFDL, 0xFE0104022E00CDFDL},//14分区
            {0xFE0104020F00ECFDL, 0xFE0104021000EBFDL, 0xFE0104021100EAFDL, 0xFE0104021200E9FDL},//15分区
            {0xFE0104021300E8FDL, 0xFE0104021400E7FDL, 0xFE0104021500E6FDL, 0xFE0104021600E5FDL},//16分区
            {0xFE0104021F00DCFDL, 0xFE0104022000DBFDL, 0xFE0104022100DAFDL, 0xFE0104022200D9FDL},//17分区
            {0xFE0104024700B4FDL, 0xFE0104024800B3FDL, 0xFE0104024900B2FDL, 0xFE0104024A00B1FDL},//18分区
            {0xFE0104022300D8FDL, 0xFE0104022400D7FDL, 0xFE0104022500D6FDL, 0xFE0104022600D5FDL},//19分区
            {0xFE0104024E00ADFDL, 0xFE0104024F00ACFDL, 0xFE0104025000ABFDL, 0xFE0104025100AAFDL},//20分区
            {0xFE0104020100FAFDL, 0, 0xFE0104020200F9FDL, 0}//牛眼(中心)
    };

    /**
     * 自动获取当前机型对应的靶盘分区码表
     *
     * @return 靶盘分区码表
     */
    public static long[][] getScoreAreaCollectDataTable() {
        return scoreAreaCollectDataTableOld;
    }

    /**
     * 判断此次采集数据是否为靶盘分区数据
     *
     * @param collected_data 采集到的数据
     * @return 是否为靶盘分区数据
     */
    public static boolean isScoreAreaCollectData(long collected_data) {
        for (int i = 0; i < KeyCode.getScoreAreaCollectDataTable().length; i++) {
            for (int j = 0; j < KeyCode.getScoreAreaCollectDataTable()[i].length; j++) {
                if (collected_data == KeyCode.getScoreAreaCollectDataTable()[i][j]) {
                    return true;
                }
            }
        }
        return false;
    }

}
